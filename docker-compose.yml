version: '3.9'

services:
  core:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - io
    ports:
      - '8080:8080'
    networks:
      - io_core
      - auth_core

  io:
    build:
        context: ../IO/
        dockerfile: Dockerfile
    depends_on:
      db_backend:
        condition: service_healthy
    ports:
      - '8080:8080'
    networks:
      - io_core
      - io_db_backend

  auth:
    build:
      context: ../auth/
      dockerfile: Dockerfile-auth
    depends_on:
      db_auth:
        condition: service_healthy
    ports:
      - '8090:8090'
    networks:
      - auth_core
      - auth_db_auth

  db_backend:
    image: mysql:8.0.33
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    ports:
      - '3306:3306'
    volumes:
      - db_backend:/var/lib/mysql
    user: root
    environment:
      - MYSQL_DATABASE=unityville
      - MYSQL_ROOT_USER=root
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
    networks:
      - io_db_backend
      - workbench_db_backend

  workbench:
    image: phpmyadmin
    restart: always
    ports:
      - '8081:80'
    environment:
      - PMA_ARBITRARY=1
    depends_on:
      db_backend:
        condition: service_healthy
      db_auth:
        condition: service_healthy
    networks:
      - workbench_db_auth
      - workbench_db_backend

  db_auth:
    image: mysql:8.0.33
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    volumes:
      - db_auth:/var/lib/mysql
    user: root
    ports:
      - '3307:3306'
    environment:
      - MYSQL_DATABASE=auth
      - MYSQL_ROOT_USER=root
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
    networks:
      - auth_db_auth
      - workbench_db_auth

volumes:
  db_backend:
  db_auth:

networks:
  io_core:
  io_db_backend:
  auth_core:
  auth_db_auth:
  workbench_db_auth:
  workbench_db_backend: